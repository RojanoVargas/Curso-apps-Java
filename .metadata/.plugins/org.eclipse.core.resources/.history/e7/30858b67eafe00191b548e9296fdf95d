import java.util.ArrayList;

public class MainArrays {

	public static void main(String[] args) {
		//Java tiene listas dinámicas y listas estáticas
		
		//Lista estática:
		int[] arrayNumeros = new int[10];
		arrayNumeros[0] = 23;
		arrayNumeros[1] = 56;
		System.out.println(arrayNumeros[0]);
		System.out.println(arrayNumeros[1]);
		//Da la longitud del array	
		System.out.println(arrayNumeros.length);
		//recorrer array
		for(int i=0;i<=arrayNumeros.length - 1;i++) {
			System.out.println("Valor de la posición" + i + " del array es" + arrayNumeros[i]);
		}
		
		/*Si ponéis una posición del array que no existe, java para el programa instantáneamente
		ejemplo:
		System.out.println(arrayNumeros[12]);
		12 no existe. De hecho, 10 tampoco, porque siempre es n-1. Por tanto el array acaba en 9*/
		System.out.println("esto se ejecuta después");
		
		//Dinámicos, son objetos en java. Va creciendo, no se inicializa con un límite
		ArrayList<String> listaStrings = new ArrayList<String>();
		listaStrings.add(0, "jarry"); //primer valor = posición, segundo valor = lo que quieres guardar
		listaStrings.add(1, "Ernion"); //puedes ir poniendo así en posiciónes x
		listaStrings.add("ron"); // o si no pones posición, que te la ponga en la siguiente
		System.out.println(listaStrings.get(2));
		
		for(int i = 0; i < listaStrings.size();i++) {
			System.out.println(listaStrings.get(i));
		}
		//LO QUE NORMALMENTE SE UTILIZA PARA RECORRER UN ARRAY ES UN "FOR EACH" (POR CADA).
		//Con ello no te preocupas del tamaño del array ni nada.
		for(String valor: listaStrings) {//ahora valor no representa la posición, 
			System.out.println(valor); //sino el valor que le quiero dar. Mejor método
		} //para los arrays estáticos y dinámicos. The very best
		
		System.out.println("Recorriendo el array estático");
		for(int n : arrayNumeros) {
			System.out.println(n);
		}
		
	}

}
